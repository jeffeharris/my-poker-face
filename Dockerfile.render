# Production Dockerfile optimized for Render
FROM python:3.11-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir gunicorn[eventlet]

# Copy application code
COPY . .

# Run build script
RUN chmod +x render-build.sh && ./render-build.sh

# Use PORT environment variable from Render
ENV PORT=5000
EXPOSE $PORT

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:$PORT/health || exit 1

# Start with gunicorn
CMD gunicorn --bind 0.0.0.0:$PORT \
    --workers 2 \
    --worker-class eventlet \
    --timeout 120 \
    --keep-alive 5 \
    --log-level info \
    flask_app.ui_web:app